name: CI

# Run on main, tags, or any pull request
on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:

jobs:

  # unit tests with coverage
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6" # LTS
          - "1" # latest stable release
        python:
          - "3.7"
        os:
          - ubuntu-latest
          - macOS-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2

      # install python before Julia
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.arch }}-test-
            ${{ runner.os }}-${{ matrix.arch }}-
            ${{ runner.os }}-

      # prepare the environment for building PyCall
      - uses: julia-actions/julia-buildpkg@latest
        env:
          PYTHON: ''

      # make sure that sklearn is installed
      - run: |
          julia --project=@. -e '
            using ScikitLearn
            @sk_import tree : DecisionTreeClassifier'

      - run: |
          git config --global user.name Tester
          git config --global user.email te@st.er
      - name: Run Tests
        uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info

  # documentation on GitHub pages
  docs:
    name: Documentation
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.6'
      - name: Install dependencies
        run: julia --project=docs/ -e '
          using Pkg;
          Pkg.develop(PackageSpec(path=pwd()));
          Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          GITHUB_REF: main
        run: julia --project=docs/ docs/make.jl
