using DataFrames, Random, QUnfoldExperiments

function main(;
        curvature_path="results/crab_protocols_Tp.tex",
        shift_path="results/crab_protocols_nmd.tex"
    )
    Random.seed!(876) # make this experiment reproducible
    df_curvature = DataFrame(
        Symbol("N") => Int[],
        Symbol("protocol") => String[],
        Symbol("5\\textsuperscript{th}") => String[],
        Symbol("25\\textsuperscript{th}") => String[],
        Symbol("50\\textsuperscript{th}") => String[],
        Symbol("75\\textsuperscript{th}") => String[],
        Symbol("95\\textsuperscript{th}") => String[],
    )
    df_shift = copy(df_curvature) # same columns
    m = 10000 # number of samples generated by each protocol
    for N in [1000, 10000]
        p_trn = QUnfoldExperiments.to_log10_spectrum_density(N, QUnfoldExperiments.P_TRN[])
        for (protocol, samples) in [
                "APP" => QUnfoldExperiments.sample_app(N, m),
                "APP-OQ (20\\%)" => QUnfoldExperiments.sample_app_oq(N, m, .2),
                "APP-OQ (5\\%)" => QUnfoldExperiments.sample_app_oq(N, m, .05),
                "APP-OQ (1\\%)" => QUnfoldExperiments.sample_app_oq(N, m, .01),
                "NPP (Crab)" => QUnfoldExperiments.sample_npp_crab(N, m),
                "NPP (simulation)" => QUnfoldExperiments.sample_npp_simulation(N, m),
                "Poisson" => QUnfoldExperiments.sample_poisson(N, m),
            ]
            spectra = [ QUnfoldExperiments.to_log10_spectrum_density(N, p) for p in samples ]
            push!(df_curvature, vcat(
                N,
                protocol,
                QUnfoldExperiments.format_statistics([
                    QUnfoldExperiments.curvature(p)
                    for p in spectra
                ])
            ))
            push!(df_shift, vcat(
                N,
                protocol,
                QUnfoldExperiments.format_statistics([
                    QUnfoldExperiments.nmd(p, p_trn)
                    for p in spectra
                ])
            ))
        end
    end
    QUnfoldExperiments.export_table(curvature_path, df_curvature)
    QUnfoldExperiments.export_table(shift_path, df_shift)
    @info "LaTeX tables exported to $(curvature_path) and $(shift_path)"
end
