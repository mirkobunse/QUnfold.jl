var documenterSearchIndex = {"docs":
[{"location":"api-reference/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api-reference/","page":"API reference","title":"API reference","text":"Below, you find a listing of all public methods of this package. Any other method you might find in the source code is not intended for direct usage.","category":"page"},{"location":"api-reference/","page":"API reference","title":"API reference","text":"CurrentModule = QUnfold","category":"page"},{"location":"api-reference/#Common-interface","page":"API reference","title":"Common interface","text":"","category":"section"},{"location":"api-reference/","page":"API reference","title":"API reference","text":"TODO with an exemplary link to fit.","category":"page"},{"location":"api-reference/","page":"API reference","title":"API reference","text":"fit\npredict\npredict_with_background","category":"page"},{"location":"api-reference/#QUnfold.fit","page":"API reference","title":"QUnfold.fit","text":"fit(m, X, y) -> FittedMethod\n\nReturn a copy of the QUnfold method m that is fitted to the data set (X, y).\n\n\n\n\n\n","category":"function"},{"location":"api-reference/#QUnfold.predict","page":"API reference","title":"QUnfold.predict","text":"predict(m, X) -> Vector{Float64}\n\nPredict the class prevalences in the data set X with the fitted method m.\n\n\n\n\n\n","category":"function"},{"location":"api-reference/#QUnfold.predict_with_background","page":"API reference","title":"QUnfold.predict_with_background","text":"predict_with_background(m, X, X_b, α=1) -> Vector{Float64}\n\nPredict the class prevalences in the observed data set X with the fitted method m, taking into account a background measurement X_b that is scaled by α.\n\n\n\n\n\n","category":"function"},{"location":"api-reference/#Quantification-/-unfolding-methods","page":"API reference","title":"Quantification / unfolding methods","text":"","category":"section"},{"location":"api-reference/","page":"API reference","title":"API reference","text":"CC\nACC\nPCC\nPACC\nRUN\nSVD\nHDx\nHDy\nIBU\nSLD","category":"page"},{"location":"api-reference/#Feature-transformations","page":"API reference","title":"Feature transformations","text":"","category":"section"},{"location":"api-reference/","page":"API reference","title":"API reference","text":"TODO.","category":"page"},{"location":"api-reference/","page":"API reference","title":"API reference","text":"ClassTransformer\nTreeTransformer","category":"page"},{"location":"#Home","page":"Home","title":"QUnfold.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TODO.","category":"page"},{"location":"#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"QUnfold.jl can be installed through the Julia package manager. From the Julia REPL, type ] to enter the Pkg mode of the REPL. Then run","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add QUnfold","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can then start to quantify / unfold the data you have:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using QUnfold\n\n# TODO","category":"page"},{"location":"#Citing","page":"Home","title":"Citing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This implementation is a part of my Ph.D. thesis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"@PhdThesis{bunse2022machine,\n  author = {Bunse, Mirko},\n  school = {TU Dortmund University},\n  title  = {Machine Learning for Acquiring Knowledge in Astro-Particle Physics},\n  year   = {2022},\n  doi    = {10.17877/DE290R-23021},\n}","category":"page"}]
}
